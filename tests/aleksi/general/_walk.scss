// =============================================================================
// =ALEKSI TESTS - WALK
// =============================================================================

@import "SassyCast";

@include describe('The walk function')
{
  @include it('should call the given function on all values in a list')
  {
    @include should(expect( walk($str-list, 'to-upper-case') ), to(equal( $str-list-upper-case )));
    @include should(expect( walk($num-list, 'unit') ), to(equal( $num-list-units )));
    @include should(expect( walk($mix-list, 'type-of') ), to(equal( $mix-list-types )));
  }

  @include it('should call the given function on all values in a map')
  {
    @include should(expect( walk($str-map, 'to-upper-case') ), to(equal( $str-map-upper-case )));
    @include should(expect( walk($num-map, 'unit') ), to(equal( $num-map-units )));
    @include should(expect( walk($mix-map, 'type-of') ), to(equal( $mix-map-types )));
  }

  @include it('call the given function on a simple value and return it inside a list')
  {
    @include should(expect( walk($word, 'to-upper-case') ), to(be( to-list($word-upper-case) )));
    @include should(expect( walk($word, 'to-upper-case') ), to(have-type-of( 'list' )));
  }

  @include it('should accepts additional arguments and pass them over to the function')
  {
    @include should(expect( walk($str-list, 'str-slice', 1, 2) ), to(equal( $str-list-sliced )));
    @include should(expect( walk($rgba, 'darken', 10%) ), to(be( to-list($rgba-darkened) )));
  }
}