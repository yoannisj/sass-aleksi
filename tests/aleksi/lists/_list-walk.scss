// =============================================================================
// =ALEKSI TESTS - LIST-WALK
// =============================================================================

@include describe('The list-walk function')
{
  @include it('should call the given function on all values in a list')
  {
    @include should(expect( list-walk($str-list, 'to-upper-case') ), to(equal( $str-list-upper-case )));
    @include should(expect( list-walk($num-list, 'unit') ), to(equal( $num-list-units )));
    @include should(expect( list-walk($mix-list, 'type-of') ), to(equal( $mix-list-types )));
  }

  @include it('should accepts additional arguments and pass them over to the function')
  {
    @include should(expect( list-walk($str-list, 'str-slice', 1, 2) ), to(equal( $str-list-sliced )));
  }

  @include xit('should throw an error when passed something else than a list or aglist')
  {
    @include should(expect( list-walk($word, 'to-upper-case') ), to(equal( null )));
    @include should(expect( list-walk($str-map, 'to-upper-case') ), to(equal( null )));
  }
}