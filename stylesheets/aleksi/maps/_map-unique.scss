// =============================================================================
// =ALEKSI - MAP-UNIQUE
// =============================================================================
////
//// @group aleksi-maps
//// @author [Yoannis Jamar](http://yoannis.me)

@import "SassyLists";
@import "sassy-maps";
@import "aleksi/general/throw";
@import "aleksi/maps/is-map";

// =map-unique( $map )
// -----------------------------------------------------------------------------
/// removes all duplicate values inside a map.
///
/// @param {map} $map - The map from which to remove duplicate values
///
/// @return {map} - New map without duplicates
/// @throw Error if `$map` is not a map.
///
/// @example scss
///   $foo: map-unique('a': 'foo', 'b': 'bar', 'c': 'foo', 'd': 'baz');
///     // => ('a': 'foo', 'b': 'bar', 'd': 'baz')
///
/// @access public
/// @since 0.1.0

@function map-unique( $map )
{
  @if not is-map($map) {
    @return throw-error('map-unique():: $map must be a map, was #{inspect($map)}.');
  }

  $unique-values: ();
  $res: ();

  @each $key, $val in $map {
    @if not sl-contain($unique-values, $val) {
      $unique-values: append($unique-values, $val);
      $res: map-set($res, $key, $val);
    }
  }

  @return $res;
}