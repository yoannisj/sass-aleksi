// =============================================================================
// =ALEKSI - STR-REPLACE
// =============================================================================
////
//// @group aleksi-strings
//// @author [Hugo Giraudel](http://hugogiraudel.com)
//// @author [Yoannis Jamar](http://yoannis.me)
//// @link https://github.com/HugoGiraudel/SassyStrings/tree/master/stylesheets/public

// =str-replace( $str, $search, $replace )
// -----------------------------------------------------------------------------
/// Replaces all occurences of a substring inside a given string.
///
/// @param {string} $str - The string to search in
/// @param {string} $search - The substring to search for
/// @param {string} $replace - The substring to replace `$search` with
///
/// @return {string} - `$str` with `$search` replaced by `$replace`
///
/// @access public
/// @since 0.2.0

@function str-replace($str, $search, $replace: '') {
  @if type-of($str) != "string" {
    @return throw-error('str-replace():: $str must be a string, was #{inspect($str)}.');
  }

  @if type-of($search) != "string" {
    @return throw-error('str-replace():: $search must be a string, was #{inspect($search)}.');
  }

  @if type-of($replace) != "string" {
    @return throw-error('str-replace():: $replace must be a string, was #{inspect($replace)}.');
  }

  $index: str-index($str, $search);

  @if $index {
    @return str-slice($str, 1, $index - 1) + $replace + str-replace(str-slice($str, $index + str-length($search)), $search, $replace);
  }

  @return $str;
}